const fruit=["apple","banana","grape"];
fruit[1]=3;
console.log(fruit[1]);
console.log(fruit.length);
fruit.push("orange");
console.log(fruit);
fruit.pop();
console.log(fruit);
fruit.unshift("kiwi");
console.log(fruit);
fruit.shift();
console.log(fruit);
fruit.splice(1,1,"mango","peach");
console.log(fruit);
const newFruit=fruit.slice(1,3);
console.log(newFruit);
const index=fruit.indexOf("grape");
console.log(index);
const hasApple=fruit.includes("apple");
console.log(hasApple);
const str=fruit.join(", ");
console.log(str);
const arr=str.split(", ");
console.log(arr);
const sortedFruit=fruit.sort();
console.log(sortedFruit);
const reversedFruit=fruit.reverse();
console.log(reversedFruit);
const numbers=[5,2,9,1,5,6];
numbers.sort((a,b)=>a-b);
console.log(numbers);
const doubled=numbers.map(num=>num*2);
console.log(doubled);
const evenNumbers=numbers.filter(num=>num%2===0);
console.log(evenNumbers);
const sum=numbers.reduce((acc,num)=>acc+num,0);
console.log(sum);
const allEven=numbers.every(num=>num%2===0);
console.log(allEven);
const someEven=numbers.some(num=>num%2===0);
console.log(someEven);
for(const fruitItem of fruit){
    console.log(fruitItem);
}
numbers.forEach(num=>console.log(num));
const found=numbers.find(num=>num>4);
console.log(found);
const foundIndex=numbers.findIndex(num=>num>4);
console.log(foundIndex);
const uniqueNumbers=[...new Set(numbers)];
console.log(uniqueNumbers);
const flatArray=[[1,2],[3,4],[5,6]].flat();
console.log(flatArray);
const arrayFromString=Array.from("hello");
console.log(arrayFromString);
const filledArray=new Array(5).fill(0);
console.log(filledArray);
const arrayWithValues=Array.of(1,2,3,4,5);
console.log(arrayWithValues);
const arrayIterator=numbers.entries();
for(const [index,value] of arrayIterator){
    console.log(index,value);
}
const keys=numbers.keys();
for(const key of keys){
    console.log(key);
}
const values=numbers.values();
for(const value of values){
    console.log(value);
}
const isArray=Array.isArray(fruit);
console.log(isArray);
const arrayCopy=numbers.slice();
console.log(arrayCopy);
const concatenated=numbers.concat([7,8,9]);
console.log(concatenated);
const flatMapArray=[1,2,3].flatMap(x=>[x,x*2]);
console.log(flatMapArray);
const arrayLength=numbers.length;
console.log(arrayLength);
const lastElement=numbers[numbers.length-1];
console.log(lastElement);
const arrayToString=numbers.toString();
console.log(arrayToString);
const localeString=numbers.toLocaleString();
console.log(localeString);
const arrayBuffer=new Uint8Array([1,2,3,4,5]);
console.log(arrayBuffer);
const typedArray=Array.from(arrayBuffer);
console.log(typedArray);
const isSorted=numbers.every((v,i,a)=>!i||a[i-1]<=v);
console.log(isSorted);
const arrayWithHoles=[1,,3,,5];
console.log(arrayWithHoles);
const compacted=arrayWithHoles.filter(v=>v!==undefined);
console.log(compacted);
const arrayWithNulls=[1,null,3,null,5];
const withoutNulls=arrayWithNulls.filter(v=>v!==null);
console.log(withoutNulls);
const multiDimensional=[[1,2],[3,4],[5,6]];
const flattened=multiDimensional.reduce((acc,val)=>acc.concat(val),[]);
console.log(flattened);
const array
    =Array(5).fill().map((_,i)=>i+1);
    console.log(array);
const arrayWithObjects=[{id:1},{id:2},{id:3}];
const ids=arrayWithObjects.map(obj=>obj.id);
console.log(ids);